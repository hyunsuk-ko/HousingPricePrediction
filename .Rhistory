house2 <- house2 %>% dplyr::select(-zipcode)
house2 <- house2 %>% dplyr::select(-yr_renovated)
head(house2)
set.seed(1) ##for reproducibility to get the same split
sample<-sample.int(nrow(house), floor(.80*nrow(house2)), replace = F)
train2 <- house2[sample, ] ##training data frame
test2 <- house2[-sample, ] ##test data frame
head(train2)
ggplot(train2, aes(x= as.factor(good_neigh), y = price, fill = as.factor(good_neigh))) +
geom_boxplot() +
labs(x = "Good Neighborhood", y = "Price", title = "Price by Good Neighborhood", fill = "")
regnull <- lm(price ~ 1, data = train2)
regfull <- lm(price ~ ., data = train2)
step(regnull, scope = list(lower = regnull, upper = regfull), direction = "both")
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
result5 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + sqft_lot15 + renovated + good_neigh, data = train2)
summary(result5)
summary(result5)$r.squared
summary(result5)$adj.r.squared
PRESS(result5)
##Find SST
anova_result<-anova(result5)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result5)/SST
Rsq_pred
yhat<-result5$fitted.values
res<-result5$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
boxcox(result5,lambda = seq(-1.,1,0.5))
train2 <- train2 %>% mutate(price = log(price))
result6 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + sqft_lot15 + renovated + good_neigh, data = train2)
summary(result6)
summary(result6)$r.squared
summary(result6)$adj.r.squared
PRESS(result6)
##Find SST
anova_result<-anova(result6)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result6)/SST
Rsq_pred
yhat<-result6$fitted.values
res<-result6$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
train2 <- train2 %>% mutate(price = log(price))
result6 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + sqft_lot15 + renovated + good_neigh, data = train2)
summary(result6)
test2$predict <- round(exp(predict(result6, newdata = test2)))
test_mse_ln_6 <- mean((test2$price - test2$predict)^2)
test_mse_ln_6
summary(result6)$r.squared
summary(result6)$adj.r.squared
PRESS(result6)
##Find SST
anova_result<-anova(result6)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result6)/SST
Rsq_pred
yhat<-result6$fitted.values
res<-result6$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
result7 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + renovated + good_neigh, data = train2)
summary(result7)
test2$predict <- round(exp(predict(result7, newdata = test2)))
head(test2)
test_mse_ln_7 <- mean((test2$price - test2$predict)^2)
test_mse_ln_7
summary(result7)$r.squared
summary(result7)$adj.r.squared
PRESS(result7)
##Find SST
anova_result<-anova(result7)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result7)/SST
Rsq_pred
yhat<-result7$fitted.values
res<-result7$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(tidyverse)
library(dplyr)
library(GGally)
library(ggpubr)
library(ggmap)
library(faraway)
library(MASS)
house <- read.csv('kc_house_data.csv')
head(house)
#register_google(key = "AIzaSyCtxAzTR-ZGYP0mZ0S2o3Ri9FzBkp_tK44")
p1 <- get_googlemap("king county") %>% ggmap
p1 + geom_point(data = house, aes(x = long, y = lat), alpha = 0.03, colour = "red")
house <- house %>% dplyr::select(-id, -date, -lat, -long, -zipcode)
head(house)
nrow(house)
ncol(house)
is.null(house)
col_order <- c("price", "bedrooms", "bathrooms", "floors", "waterfront", "view", "condition", "grade", "yr_built",
"yr_renovated", "sqft_living", "sqft_lot", "sqft_living15", "sqft_lot15")
house <- house[, col_order]
house$bathrooms <- round(house$bathrooms)
house$yr_built <- case_when(
(1900 <= house$yr_built) &  (house$yr_built< 1920) ~ 0,
(1920 <= house$yr_built) &  (house$yr_built< 1940) ~ 1,
(1940 <= house$yr_built) &  (house$yr_built< 1960) ~ 2,
(1960 <= house$yr_built) &  (house$yr_built< 1980) ~ 3,
(1980 <= house$yr_built) &  (house$yr_built< 2000) ~ 4,
(2000 <= house$yr_built) ~ 5)
house$renovated <- ifelse(house$yr_renovated != 0, 1, 0)
house <- house %>% dplyr::select(-yr_renovated)
set.seed(1) ##for reproducibility to get the same split
sample<-sample.int(nrow(house), floor(.80*nrow(house)), replace = F)
train<-house[sample, ] ##training data frame
test<-house[-sample, ] ##test data frame
head(train)
house_1 <- train %>% dplyr::select(price, bedrooms, bathrooms, floors)
ggpairs(house_1)
p1 <- ggplot(train, aes(x = as.factor(bedrooms), y = price, fill = as.factor(bedrooms))) +
geom_boxplot() +
labs(x = "Number of Bedrooms", y = "Price", title = "Price by Number of Bedrooms", fill = "Bedrooms")
p2 <- ggplot(train, aes(x = as.factor(bathrooms), y = price, fill = as.factor(bathrooms))) +
geom_boxplot() +
labs(x = "Number of Bathrooms", y = "Price", title = "Price by Number of Bathrooms", fill = "Bathrooms")
p3 <- ggplot(train, aes(x = as.factor(floors), y = price, fill = as.factor(floors))) +
geom_boxplot() +
labs(x = "Number of Floors", y = "Price", title = "Price by Number of Floors", fill = "Floors")
ggarrange(p1, p2, p3,
ncol = 1, nrow = 3)
house_2 <- train %>% dplyr::select(waterfront, view, condition, price)
ggpairs(house_2)
p4 <- ggplot(train, aes(x = as.factor(waterfront), y = price, fill = as.factor(waterfront))) +
geom_boxplot() +
labs(x = "Waterfront", y = "Price", title = "Price by with / without waterfront", fill = "Waterfront")
p5 <- ggplot(train, aes(x = as.factor(view), y = price, fill = as.factor(view))) +
geom_boxplot() +
labs(x = "View", y = "Price", title = "Price by View", fill = "View")
p6 <- ggplot(train, aes(x = as.factor(condition), y = price, fill = as.factor(condition))) +
geom_boxplot() +
labs(x = "Condition", y = "Price", title = "Price by Condition", fill = "Condition")
ggarrange(p4, p5, p6, ncol = 1, nrow = 3)
house_3 <- train %>% dplyr::select(grade, yr_built, renovated, price)
ggpairs(house_3)
p7 <- ggplot(train, aes(x = as.factor(grade), y = price, fill = as.factor(grade))) +
geom_boxplot() +
labs(x = "Grade", y = "Price", title = "Price by Grade", fill = "Grade")
p8 <- ggplot(train, aes(x = as.factor(yr_built), y = price, fill = as.factor(yr_built))) +
geom_boxplot() +
labs(x = "Year built", y = "Price", title = "Price by Year built", fill = "Year built")
p9 <- ggplot(train, aes(x = as.factor(renovated), y = price, fill = as.factor(renovated))) +
geom_boxplot() +
labs(x = "Renovated", y = "Price", title = "Price by Renovated", fill = "Renovated")
ggarrange(p7, p8, p9, ncol = 1, nrow = 3)
house_4 <- train %>% dplyr::select(sqft_living, sqft_lot, price)
ggpairs(house_4)
p10 <- ggplot(train, aes(x = sqft_living, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Living", y = "Price", title = "A Scatterplot of Sqft Living vs Price")
p11 <- ggplot(train, aes(x = sqft_lot, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Lot", y = "Price", title = "A Scatterplot of Sqft Lot vs Price")
ggarrange(p10, p11, ncol = 1, nrow = 2)
house_5 <- train %>% dplyr::select(sqft_living15, sqft_lot15, price)
ggpairs(house_5)
p12 <- ggplot(train, aes(x = sqft_living15, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Living15", y = "Price", title = "A Scatterplot of Sqft Living 15 vs Price")
p13 <- ggplot(train, aes(x = sqft_lot15, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Lot15", y = "Price", title = "A Scatterplot of Sqft Lot 15 vs Price")
ggarrange(p12, p13, ncol = 1, nrow = 2)
mydata.cor <- cor(house)
palette = colorRampPalette(c("green", "white", "red")) (20)
heatmap(x = mydata.cor, col = palette, symm = TRUE, main = "A Heatmap of All Columns")
regnull <- lm(price ~ 1, data = train)
regfull <- lm(price ~ ., data = train)
step(regnull, scope = list(lower = regnull, upper = regfull), direction = "both")
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
PRESS <- function(linear.model) {
## get the residuals from the linear.model. ## extract hat from lm.influence to obtain the leverages
pr <- residuals(linear.model) / (1-lm.influence(linear.model)$hat)
## calculate the PRESS by squaring each term and adding them up
PRESS <- sum(pr ^ 2)
return(PRESS)
}
result <- lm(price ~ bedrooms + bathrooms + floors + waterfront + view + condition + grade + yr_built + sqft_living +
sqft_living15 + sqft_lot15 + renovated, data = train)
summary(result)
test$predict <- round(predict(result, newdata = test))
test_mse_ln <- mean((test$price - test$predict)^2)
test_mse_ln
summary(result)$r.squared
summary(result)$adj.r.squared
PRESS(result)
##Find SST
anova_result<-anova(result)
SST<-sum(anova_result$"Sum Sq") ##R2 pred
Rsq_pred <- 1-PRESS(result)/SST
Rsq_pred
vif(result)
yhat <- result$fitted.values
res <- result$residuals
Data <- data.frame(train, yhat, res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
boxcox(result,lambda = seq(-1.,1,0.5))
train <- train %>% mutate(price = price ^ 0.1)
result2 <- lm(price ~ bedrooms + bathrooms + floors + waterfront + view + condition + grade + yr_built + sqft_living +
sqft_living15 + sqft_lot15 + renovated, data = train)
summary(result2)
test$predict <- round(predict(result2, newdata = test) ^ 10)
test_mse_ln_2 <- mean((test$price - test$predict)^2)
test_mse_ln_2
summary(result2)$r.squared
summary(result2)$adj.r.squared
PRESS(result2)
##Find SST
anova_result<-anova(result2)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result2)/SST
Rsq_pred
yhat<-result2$fitted.values
res<-result2$residuals
Data<-data.frame(train,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
tail(test)
n <- nrow(train)
p <- 13
cv <- qt(1-0.05,(2*n), n-1-p)
res <- result2$residuals
standard.res<- res/summary(result2)$sigma
student.res <- rstandard(result2)
ext.student.res <- rstudent(result2)
ext.student.res[abs(ext.student.res)>cv]
res.frame<-data.frame(res,standard.res,
student.res,ext.student.res)
par(mfrow=c(1,3))
plot(result2$fitted.values,standard.res,
main="Standardized Residuals",
ylim=c(-4.5,4.5))
plot(result2$fitted.values,student.res,
main="Studentized Residuals",
ylim=c(-4.5,4.5))
plot(result2$fitted.values,ext.student.res,
main="Externally  Studentized Residuals",
ylim=c(-4.5,4.5))
# leverage
lev <- lm.influence(result2)$hat
# identify high leverage points
x <- lev[lev > 2 * p / n]
length(x) / n
# COOK's Distance
COOKS<-cooks.distance(result2)
y <- COOKS[COOKS>qf(0.5,p,n-p)]
length(y)
# DFFITS (Difference in Fits)
DFFITS <- dffits(result2)
z <- (DFFITS[abs(DFFITS)>2*sqrt(p/n)])
z
indices <- rownames(data.frame(z))
train2 <- train
train2$indices <- rownames(train2)
for (i in indices) {
train2 <- train2 %>% filter(indices != i)
}
nrow(train2)
result3 <- lm(price ~ bedrooms + bathrooms + floors + waterfront + view + condition + grade + yr_built + sqft_living +
sqft_living15 + sqft_lot15 + renovated, data = train2)
summary(result3)
test$predict <- round(predict(result3, newdata = test) ^ 10)
test_mse_ln_3 <- mean((test$price - test$predict)^2)
test_mse_ln_3
summary(result3)$r.squared
summary(result3)$adj.r.squared
PRESS(result3)
##Find SST
anova_result<-anova(result3)
SST <- sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result3)/SST
Rsq_pred
yhat<-result3$fitted.values
res<-result3$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
vif(result3)
ggplot(train2, aes(x = sqft_lot15, y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Lot15", y = "Price", title = "A Scatterplot of Sqft Lot 15 vs Price")
ggplot(train2, aes(x = log(sqft_lot15), y = price)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Sqft Lot15", y = "Price", title = "A Scatterplot of Sqft Lot 15 vs Price")
result4 <- lm(price ~ bedrooms + bathrooms + floors + waterfront + view + condition + grade + yr_built + sqft_living +
sqft_living15 + log(sqft_lot15) + renovated, data = train2)
summary(result4)
test$predict <- round(predict(result4, newdata = test) ^ 10)
test_mse_ln_4 <- mean((test$price - test$predict)^2)
test_mse_ln_4
summary(result4)$r.squared
summary(result4)$adj.r.squared
PRESS(result4)
##Find SST
anova_result<-anova(result4)
SST <- sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result4)/SST
Rsq_pred
yhat<-result4$fitted.values
res<-result4$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
vif(result4)
house2 <- read.csv('kc_house_data.csv')
house2 <- house2 %>% dplyr::select(-id, -date, -lat, -long)
zipcode <- unique(house2$zipcode)
zipcode
# https://www.niche.com/places-to-live/search/best-zip-codes-to-live/c/king-county-wa/
# Overall Grade > A-
good_zip <- c(98004, 98005, 98052, 98121, 98007, 98109, 98033, 98122, 98029, 98006, 98103, 98102, 98074, 98101, 98040, 98115, 98112, 98107, 98119, 98105, 98075, 98008, 98116, 98053, 98034, 98039, 98144, 98199, 98117, 98104, 98028, 98027, 98011, 98177, 98125, 98065, 98072, 98077, 98126, 98155, 98136, 98059, 98133, 98188, 98106)
house2$good_neigh <- ifelse(house2$zipcode %in% good_zip, 1, 0)
hist(house2$good_neigh)
house2$yr_built <- case_when(
(1900 <= house2$yr_built) &  (house2$yr_built< 1920) ~ 0,
(1920 <= house2$yr_built) &  (house2$yr_built< 1940) ~ 1,
(1940 <= house2$yr_built) &  (house2$yr_built< 1960) ~ 2,
(1960 <= house2$yr_built) &  (house2$yr_built< 1980) ~ 3,
(1980 <= house2$yr_built) &  (house2$yr_built< 2000) ~ 4,
(2000 <= house2$yr_built) ~ 5)
house2$renovated <- ifelse(house2$yr_renovated != 0, 1, 0)
house2 <- house2 %>% dplyr::select(-zipcode)
house2 <- house2 %>% dplyr::select(-yr_renovated)
head(house2)
set.seed(1) ##for reproducibility to get the same split
sample<-sample.int(nrow(house), floor(.80*nrow(house2)), replace = F)
train2 <- house2[sample, ] ##training data frame
test2 <- house2[-sample, ] ##test data frame
head(train2)
regnull <- lm(price ~ 1, data = train2)
regfull <- lm(price ~ ., data = train2)
step(regnull, scope = list(lower = regnull, upper = regfull), direction = "both")
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
result5 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + sqft_lot15 + renovated + good_neigh, data = train2)
summary(result5)
summary(result5)$r.squared
summary(result5)$adj.r.squared
PRESS(result5)
##Find SST
anova_result<-anova(result5)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result5)/SST
Rsq_pred
yhat<-result5$fitted.values
res<-result5$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
boxcox(result5,lambda = seq(-1.,1,0.5))
train2 <- train2 %>% mutate(price = log(price))
result6 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + sqft_lot15 + renovated + good_neigh, data = train2)
summary(result6)
test2$predict <- round(exp(predict(result6, newdata = test2)))
test_mse_ln_6 <- mean((test2$price - test2$predict)^2)
test_mse_ln_6
summary(result6)$r.squared
summary(result6)$adj.r.squared
PRESS(result6)
##Find SST
anova_result<-anova(result6)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result6)/SST
Rsq_pred
yhat<-result6$fitted.values
res<-result6$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
result7 <- lm(price ~ bedrooms + bathrooms + sqft_living + sqft_lot +
waterfront + view + condition + grade + sqft_above + yr_built +
sqft_living15 + renovated + good_neigh, data = train2)
summary(result7)
test2$predict <- round(exp(predict(result7, newdata = test2)))
head(test2)
test_mse_ln_7 <- mean((test2$price - test2$predict)^2)
test_mse_ln_7
summary(result7)$r.squared
summary(result7)$adj.r.squared
PRESS(result7)
##Find SST
anova_result<-anova(result7)
SST<-sum(anova_result$"Sum Sq")
##R2 pred
Rsq_pred <- 1-PRESS(result7)/SST
Rsq_pred
yhat<-result7$fitted.values
res<-result7$residuals
Data<-data.frame(train2,yhat,res)
ggplot(Data, aes(x=yhat,y=res))+
geom_point()+
geom_hline(yintercept=0, color="red")+
labs(x="Fitted y",
y="Residuals",
title="Residual Plot")
acf(res)
qqnorm(res)
qqline(res, col="red")
